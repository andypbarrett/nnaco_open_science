---
title: "Open Science"
author: "Andrew P. Barrett"
date: last-modified
format:
  html:
    toc: true
    title-block-banner: true
    bibliography: references.bib
    citations-hover: true
---


Open Science is a [Strategic Objective]() of the NNA Community
Office.  

# What is Open Science?

The US Federal Government [defines](https://open.science.gov/) Open
Science as "...the principle and practice of making research products
and processes available to all, while respecting diverse cultures,
maintaining security and privacy, and fostering collaborations,
reproducibility, and equity."

On January 11, 2023, the White House
Office of Science and Technology Policy launched the _Year of Open
Science_ [@whostp_yos_2023].  [Multiple Federal Agencies](), including NSF, NASA and NOAA
have launched programmes and funding opportunites to promote and
foster Open Science practices.  Similar efforts are underway in other
countries and regions.


# Why Open Science?

Open science facilitates transparent, reproducible science through
sharing data, methods and software used in research, as well as
through open access to the results of that research.  It also
encourages diversity within and access to research not only for
academic but also for non-academic participants.  As such, open
science aligns with the NNA-CO strategic goals of co-production of
knowledge, and education and outreach.

Open Science is also kinder science [@lowndes_open_2019].  It allows
researchers in academia, as well as citizen scientists, to do science
in a more efficient manner.  Data are easier to find, access and use
when they are stored in stable, long-term, freely accessible archives,
with perstent identifiers (e.g. DOI).  Openly sharing open source,
non-proprietory software tools and code used for analysis not only
means that fellow researchers can reuse these tools (_needs to be
reproducible but it does aid understanding_), getting to do
science faster, but also allows analyses to be reproduced and errors
discovered, _and corrected_, quickly. Ensuring academic papers are
openly accessible to all, not restricted behind paywalls, will not
only lead to increased understanding of scientific results but also
broaden participation in science.  Additionally, outreach...

Open Science also benefits you and your research team, especially the
_Future You_.  By documenting analysis steps, code and data for other
researchers, you make it easier for you or other members of your
research team to restart a project after a hiatus or to hand-off a
project to someone else. 


# Supporting Open Science at the NNA-CO

The NNA-CO will promote and share resources for the openness,
integrity, and reproducibility of NNA-funded research.  We will
collaborate with the NSF Arctic Data Center (ADC) to create greater
awareness amongst NNA investigators of data requirements, and of
available resources for archiving their datasets with ADC for spatial,
temporal, and thematic discoverability.  We will support researchers
in managing and archiving data; applying the principles of Open Data )
to their research ([FAIR
Principles](https://www.go-fair.org/fair-principles/) & [CARE
Principles](https://www.gida-global.org/care)); and understanding best
practices as they deal with different data types (for example,
physical environmental observations vs. social science data
vs. Indigenous community data).  Following our Guiding Principles, we
will work to broaden the involvement of Indigenous communities and
underrepresented groups in Arctic science through promoting open and
equitable access to data and results.  Working with the NNA-CO
Advisory Boards, NNA researchers, and the wider research community, we
will facilitate the development of best practices for open science in
the context of interdisciplinary and collaborative Arctic research
while recognizing and upholding Indigenous data sovereignty.


# How to do Open Science

Open Science is, for many, a change in the way we do science.
Although we may understand what Open Science is and why it is
important, how to do Open Science is not always clear, can be
overwhelming, and seem like a lot of extra work.  It needn't be.
Below we provide some hints and resources to help you make the change
to Open Science.

## General hints and suggestions.

Fortunately, there are some excellent arcticles and guides on _doing
Open Science_ (See @heise_ten_2023 and @tops_guide).  Two keys pieces
of advice are worth highlighting.

- Start slowly.  Select a few Open Science practices to start with
rather than trying to follow every suggestion.  The NASA TOPS program
suggest a few [first
steps](https://nasa.github.io/Transform-to-Open-Science-Book/Open_Science_Cookbook/Your_Open_Science_Journey.html#the-core-skills).

- Incorporate Open Science practices at the start of a project, rather
than at the end when you are trying to publish a manuscript of wrap-up
a project.  Trying to backwards engineer an analysis workflow or find
URL or DOI for a dataset months after you downloaded it is time
consuming and frustrating.  Having a system to record these as you
work on the project will save time in the long-run.
@rodrigues_building_2023, advocates DRY WIT: **D**on't **R**epeat 
**Y**ourself; and **W**rite **IT** down.   

The @tops_guide is a nice tiered approach gives guidance to
individuals, reasearch teams and organizations in adopting Open
Sciences practices


## Open Access

## Open Data

## Open Code

Most scientists don't consider themselves _software developers_.
Although you may not be writing production software for Google, or
some other tech company, you are developing software to collect, clean
and analyse data, and to create plots and tables.  Taking simple steps
to document code and write _clean_code_ will make your code easier to
understand and reduce anxiety created by needing to share code.  The
resources outlined below are a good start.

Software Capentries

Two papers [@wilson_best_2014; @wilson_good_2017] lay out a set of
best and _good enough_ practices for scientific software sevelopment.

@rodrigues_building_2023 gives an in depth guide to building
reproducible workflows; including using version control systems like
GitHub, writing clean code, and documenting workflows.  The approach
is a tutorial style with hands-on coding.  The focus is
on the R language but the approach applies to other langauges such as
python. It assumes some knowledge of writing code.
